name: SeeQ dockerhub

on:
  push:
    branches: [main, develop]
    tags:
      - "*"
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Build and push Docker image
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/seeq-customer-frontend:latest
            ${{ secrets.DOCKER_USERNAME }}/seeq-customer-frontend:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/seeq-customer-frontend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/seeq-customer-frontend:buildcache,mode=max

  tag:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/heads/') # Prevents loops

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate tag
        id: generate_tag
        run: |
          NEW_TAG=$(date +'%Y.%m.%d-%H%M%S')
          echo "TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Create and push tag
        run: |
          if git rev-parse $TAG >/dev/null 2>&1; then
            echo "Tag already exists. Skipping..."
            exit 0
          fi
          git tag $TAG
          git push origin $TAG

  release:
    runs-on: ubuntu-latest
    needs: tag
    if: startsWith(github.ref, 'refs/heads/') # Prevents skipping

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }} # Use built-in token
        with:
          tag_name: ${{ env.TAG }}
          release_name: Release ${{ env.TAG }}
          draft: false
          prerelease: false
